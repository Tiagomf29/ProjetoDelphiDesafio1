unit UTveiculo;

interface
uses
  UEnum,Vcl.Controls,Vcl.Dialogs,Vcl.StdCtrls,TypInfo, SysUtils;

type

  TVeiculo = class(TObject)

private
  Fmodelo : String;
  Ftipo   : TTipoVeiculo;
  Fcambio : String;
  Fcores  : String;
  function getCambio: String;
  function getCores: String;
  function getModelo: String;
  function getTipo: TTipoVeiculo;
  procedure setCambio(const Value: String);
  procedure setModelo(const Value: String);
  procedure setTipo(const Value: TTipoVeiculo);
  procedure setCores(const Value: String);

protected


public
  property modelo : String read getModelo write setModelo;
  property tipo   : TTipoVeiculo read getTipo write setTipo;
  property cambio : String read getCambio write setCambio;
  property cores  : String read getCores write setCores;
  constructor create(Amodelo : String; Atipo : TTipoVeiculo; Acambio : String; ACores :String; Amemo :TMemo );
  function acelerar(descricao : String): String;
  function frear(descricao:String):String;
  procedure estacionar(memo : TMemo);
  function toString(): string;
end;

implementation

{ TVeiculo }

function TVeiculo.acelerar(descricao: String): String;
begin
  result:=descricao;
end;

constructor TVeiculo.create(Amodelo : String; Atipo : TTipoVeiculo; Acambio : String; ACores :String; Amemo :TMemo );
var
enumeracao : String;
begin
  Fmodelo:=Amodelo;
  Ftipo:=Atipo;
  Fcambio:=Acambio;
  Fcores:=ACores;

  if Fmodelo = '' then
  begin
    raise Exception.Create('Carro não será criado. Modelo não preenchido.');
  end;

  if Fcambio = '' then
  begin
   MessageDlg('Carro não será criado. Cambio não preenchido.',mtInformation,[mbOK],0);
   Abort;
  end;

  enumeracao:=GetEnumName(TypeInfo(TTipoVeiculo),integer(Ftipo));

  Amemo.Lines.Add(toString);
end;

procedure TVeiculo.estacionar(memo: TMemo);
begin
  memo.Lines.Add('Estacionar');
end;

function TVeiculo.frear(descricao: String): String;
begin
  Result:=descricao;
end;

function TVeiculo.getCambio: String;
begin
  Result:= Fcambio;
end;

function TVeiculo.getCores: String;
begin
  Result:= Fcores;
end;

function TVeiculo.getModelo: String;
begin
  Result:= Fmodelo;
end;

function TVeiculo.getTipo: TTipoVeiculo;
begin
  Result:= Ftipo;
end;

procedure TVeiculo.setCambio(const Value: String);
begin
  Fcambio:= Value;
end;

procedure TVeiculo.setCores(const Value: String);
begin
  Fcores:=Value;
end;

procedure TVeiculo.setModelo(const Value: String);
begin
   Fmodelo:= Value;
end;

procedure TVeiculo.setTipo(const Value: TTipoVeiculo);
begin
  Ftipo:= Value;
end;

function TVeiculo.toString: string;
var
enumeracao : string;
begin

  enumeracao:=GetEnumName(TypeInfo(TTipoVeiculo),integer(Ftipo));
  Result:= 'Modelo: '+ Fmodelo + ' |Tipo: '+ enumeracao + ' |Cambio: '+Fcambio + ' |Cores: '+ Fcores ;

end;

end.
