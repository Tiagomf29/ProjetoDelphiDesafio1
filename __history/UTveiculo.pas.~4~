unit UTveiculo;

interface
uses
  UEnum;

type

  TVeiculo = class

private
  Fmodelo : String;
  Ftipo   : TEnum;
  Fcambio : String;
  Fcores  : String;
  function getCambio: String;
  function getCores: String;
  function getModelo: String;
  function getTipo: Tenum;
  procedure setCambio(const Value: String);
  procedure setModelo(const Value: String);
  procedure setTipo(const Value: Tenum);

protected


public
  property modelo : String read getModelo write setModelo;
  property tipo   : Tenum read getTipo write setTipo;
  property cambio : String read getCambio write setCambio;
  property cores  : String read getCores write getCores;

  end;

implementation

{ TVeiculo }

function TVeiculo.getCambio: String;
begin
  Result:= Fcambio;
end;

function TVeiculo.getCores: String;
begin
  Result:= Fcores;
end;

function TVeiculo.getModelo: String;
begin
  Result:= Fmodelo;
end;

function TVeiculo.getTipo: Tenum;
begin
  Result:= Ftipo;
end;

procedure TVeiculo.setCambio(const Value: String);
begin
  Fcambio:= Value;
end;

procedure TVeiculo.setModelo(const Value: String);
begin
   Fmodelo:= Value;
end;

procedure TVeiculo.setTipo(const Value: Tenum);
begin
  Ftipo:= Value;
end;

end.
